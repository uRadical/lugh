// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: ocsf/v1_2_0/events/application/application.proto

package application

import (
	enums "github.com/valllabh/ocsf-schema-golang/ocsf/v1_2_0/events/application/enums"
	objects "github.com/valllabh/ocsf-schema-golang/ocsf/v1_2_0/objects"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// URL: https://schema.ocsf.io/1.2.0/classes/application
// Event: application
// Event UID: 0
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       *objects.Metadata              `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                               // Caption: Metadata;
	Cloud          *objects.Cloud                 `protobuf:"bytes,2,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                     // Caption: Cloud; Profile: cloud;
	Observables    []*objects.Observable          `protobuf:"bytes,3,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                         // Caption: Observables;
	TypeName       string                         `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                               // Caption: Type Name;
	Enrichments    []*objects.Enrichment          `protobuf:"bytes,5,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                         // Caption: Enrichments;
	TypeUid        enums.APPLICATION_TYPE_UID     `protobuf:"varint,6,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_TYPE_UID" json:"type_uid,omitempty"`                  // Caption: Type ID;
	StatusDetail   string                         `protobuf:"bytes,7,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                   // Caption: Status Details;
	ActivityName   string                         `protobuf:"bytes,8,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                   // Caption: Activity;
	Count          int32                          `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`                                                                                                    // Caption: Count;
	StartTime      int64                          `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                          // Caption: Start Time;
	TimezoneOffset int32                          `protobuf:"varint,11,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                           // Caption: Timezone Offset;
	SeverityId     enums.APPLICATION_SEVERITY_ID  `protobuf:"varint,12,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
	StatusId       enums.APPLICATION_STATUS_ID    `protobuf:"varint,13,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	RawData        string                         `protobuf:"bytes,14,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                 // Caption: Raw Data;
	EndTime        int64                          `protobuf:"varint,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                // Caption: End Time;
	ActivityId     enums.APPLICATION_ACTIVITY_ID  `protobuf:"varint,16,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	CategoryName   string                         `protobuf:"bytes,17,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                  // Caption: Category;
	Duration       int32                          `protobuf:"varint,18,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                             // Caption: Duration;
	Time           int64                          `protobuf:"varint,19,opt,name=time,proto3" json:"time,omitempty"`                                                                                                     // Caption: Event Time;
	ClassUid       enums.APPLICATION_CLASS_UID    `protobuf:"varint,20,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	Status         string                         `protobuf:"bytes,21,opt,name=status,proto3" json:"status,omitempty"`                                                                                                  // Caption: Status;
	ClassName      string                         `protobuf:"bytes,22,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                           // Caption: Class;
	StatusCode     string                         `protobuf:"bytes,23,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                        // Caption: Status Code;
	Message        string                         `protobuf:"bytes,24,opt,name=message,proto3" json:"message,omitempty"`                                                                                                // Caption: Message;
	Api            *objects.Api                   `protobuf:"bytes,25,opt,name=api,proto3" json:"api,omitempty"`                                                                                                        // Caption: API Details; Profile: cloud;
	CategoryUid    enums.APPLICATION_CATEGORY_UID `protobuf:"varint,26,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	Unmapped       *objects.Object                `protobuf:"bytes,27,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                              // Caption: Unmapped Data;
	Severity       string                         `protobuf:"bytes,28,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                              // Caption: Severity;
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Application) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *Application) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *Application) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Application) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *Application) GetTypeUid() enums.APPLICATION_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.APPLICATION_TYPE_UID(0)
}

func (x *Application) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *Application) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *Application) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Application) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Application) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *Application) GetSeverityId() enums.APPLICATION_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.APPLICATION_SEVERITY_ID(0)
}

func (x *Application) GetStatusId() enums.APPLICATION_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.APPLICATION_STATUS_ID(0)
}

func (x *Application) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *Application) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Application) GetActivityId() enums.APPLICATION_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.APPLICATION_ACTIVITY_ID(0)
}

func (x *Application) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *Application) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Application) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Application) GetClassUid() enums.APPLICATION_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.APPLICATION_CLASS_UID(0)
}

func (x *Application) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Application) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Application) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *Application) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Application) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *Application) GetCategoryUid() enums.APPLICATION_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.APPLICATION_CATEGORY_UID(0)
}

func (x *Application) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *Application) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

// Event UID: 5
// URL: https://schema.ocsf.io/1.2.0/classes/datastore_activity
// Event: application
type DatastoreActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawData        string                                  `protobuf:"bytes,1,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                                 // Caption: Raw Data;
	ActivityName   string                                  `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                  // Caption: Activity;
	SeverityId     enums.DATASTORE_ACTIVITY_SEVERITY_ID    `protobuf:"varint,3,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`              // Caption: Severity ID;
	CategoryName   string                                  `protobuf:"bytes,4,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                  // Caption: Category;
	Table          *objects.Table                          `protobuf:"bytes,5,opt,name=table,proto3" json:"table,omitempty"`                                                                                                                    // Caption: Table;
	FirewallRule   *objects.FirewallRule                   `protobuf:"bytes,6,opt,name=firewall_rule,json=firewallRule,proto3" json:"firewall_rule,omitempty"`                                                                                  // Caption: Firewall Rule; Profile: security_control;
	Malware        []*objects.Malware                      `protobuf:"bytes,7,rep,name=malware,proto3" json:"malware,omitempty"`                                                                                                                // Caption: Malware; Profile: security_control;
	SrcEndpoint    *objects.NetworkEndpoint                `protobuf:"bytes,8,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                                     // Caption: Source Endpoint;
	StatusDetail   string                                  `protobuf:"bytes,9,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                                  // Caption: Status Details;
	Duration       int32                                   `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                            // Caption: Duration;
	ClassUid       enums.DATASTORE_ACTIVITY_CLASS_UID      `protobuf:"varint,11,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`                     // Caption: Class ID;
	Metadata       *objects.Metadata                       `protobuf:"bytes,12,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                             // Caption: Metadata;
	Actor          *objects.Actor                          `protobuf:"bytes,13,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                   // Caption: Actor;
	Authorizations []*objects.Authorization                `protobuf:"bytes,14,rep,name=authorizations,proto3" json:"authorizations,omitempty"`                                                                                                 // Caption: Authorization Information; Profile: security_control;
	TimezoneOffset int32                                   `protobuf:"varint,15,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                          // Caption: Timezone Offset;
	ClassName      string                                  `protobuf:"bytes,16,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                          // Caption: Class;
	StatusCode     string                                  `protobuf:"bytes,17,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                       // Caption: Status Code;
	Disposition    string                                  `protobuf:"bytes,18,opt,name=disposition,proto3" json:"disposition,omitempty"`                                                                                                       // Caption: Disposition; Profile: security_control;
	Databucket     *objects.Databucket                     `protobuf:"bytes,19,opt,name=databucket,proto3" json:"databucket,omitempty"`                                                                                                         // Caption: Databucket;
	QueryInfo      *objects.QueryInfo                      `protobuf:"bytes,20,opt,name=query_info,json=queryInfo,proto3" json:"query_info,omitempty"`                                                                                          // Caption: Query Info;
	Status         string                                  `protobuf:"bytes,21,opt,name=status,proto3" json:"status,omitempty"`                                                                                                                 // Caption: Status;
	Unmapped       *objects.Object                         `protobuf:"bytes,22,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                             // Caption: Unmapped Data;
	StatusId       enums.DATASTORE_ACTIVITY_STATUS_ID      `protobuf:"varint,23,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`                     // Caption: Status ID;
	Observables    []*objects.Observable                   `protobuf:"bytes,24,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                       // Caption: Observables;
	ActionId       enums.DATASTORE_ACTIVITY_ACTION_ID      `protobuf:"varint,25,opt,name=action_id,json=actionId,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_ACTION_ID" json:"action_id,omitempty"`                     // Caption: Action ID; Profile: security_control;
	HttpRequest    *objects.HttpRequest                    `protobuf:"bytes,26,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`                                                                                    // Caption: HTTP Request;
	DispositionId  enums.DATASTORE_ACTIVITY_DISPOSITION_ID `protobuf:"varint,27,opt,name=disposition_id,json=dispositionId,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_DISPOSITION_ID" json:"disposition_id,omitempty"` // Caption: Disposition ID; Profile: security_control;
	TypeId         enums.DATASTORE_ACTIVITY_TYPE_ID        `protobuf:"varint,28,opt,name=type_id,json=typeId,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_TYPE_ID" json:"type_id,omitempty"`                             // Caption: Type ID;
	TypeName       string                                  `protobuf:"bytes,29,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                             // Caption: Type Name;
	Severity       string                                  `protobuf:"bytes,30,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                             // Caption: Severity;
	Api            *objects.Api                            `protobuf:"bytes,31,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                       // Caption: API Details; Profile: cloud;
	ActivityId     enums.DATASTORE_ACTIVITY_ACTIVITY_ID    `protobuf:"varint,32,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`             // Caption: Activity ID;
	Attacks        []*objects.Attack                       `protobuf:"bytes,33,rep,name=attacks,proto3" json:"attacks,omitempty"`                                                                                                               // Caption: MITRE ATT&CK® Details; Profile: security_control;
	Action         string                                  `protobuf:"bytes,34,opt,name=action,proto3" json:"action,omitempty"`                                                                                                                 // Caption: Action; Profile: security_control;
	StartTime      int64                                   `protobuf:"varint,35,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                         // Caption: Start Time;
	EndTime        int64                                   `protobuf:"varint,36,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                               // Caption: End Time;
	DstEndpoint    *objects.NetworkEndpoint                `protobuf:"bytes,37,opt,name=dst_endpoint,json=dstEndpoint,proto3" json:"dst_endpoint,omitempty"`                                                                                    // Caption: Destination Endpoint;
	Type           string                                  `protobuf:"bytes,38,opt,name=type,proto3" json:"type,omitempty"`                                                                                                                     // Caption: Type;
	TypeUid        enums.DATASTORE_ACTIVITY_TYPE_UID       `protobuf:"varint,39,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                         // Caption: Type ID;
	Time           int64                                   `protobuf:"varint,40,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                    // Caption: Event Time;
	CategoryUid    enums.DATASTORE_ACTIVITY_CATEGORY_UID   `protobuf:"varint,41,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"`         // Caption: Category ID;
	Database       *objects.Database                       `protobuf:"bytes,42,opt,name=database,proto3" json:"database,omitempty"`                                                                                                             // Caption: Database;
	Count          int32                                   `protobuf:"varint,43,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                  // Caption: Count;
	Enrichments    []*objects.Enrichment                   `protobuf:"bytes,44,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                       // Caption: Enrichments;
	Message        string                                  `protobuf:"bytes,45,opt,name=message,proto3" json:"message,omitempty"`                                                                                                               // Caption: Message;
	Cloud          *objects.Cloud                          `protobuf:"bytes,46,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                   // Caption: Cloud; Profile: cloud;
}

func (x *DatastoreActivity) Reset() {
	*x = DatastoreActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatastoreActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatastoreActivity) ProtoMessage() {}

func (x *DatastoreActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatastoreActivity.ProtoReflect.Descriptor instead.
func (*DatastoreActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{1}
}

func (x *DatastoreActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *DatastoreActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *DatastoreActivity) GetSeverityId() enums.DATASTORE_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.DATASTORE_ACTIVITY_SEVERITY_ID(0)
}

func (x *DatastoreActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *DatastoreActivity) GetTable() *objects.Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *DatastoreActivity) GetFirewallRule() *objects.FirewallRule {
	if x != nil {
		return x.FirewallRule
	}
	return nil
}

func (x *DatastoreActivity) GetMalware() []*objects.Malware {
	if x != nil {
		return x.Malware
	}
	return nil
}

func (x *DatastoreActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *DatastoreActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *DatastoreActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DatastoreActivity) GetClassUid() enums.DATASTORE_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.DATASTORE_ACTIVITY_CLASS_UID(0)
}

func (x *DatastoreActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DatastoreActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *DatastoreActivity) GetAuthorizations() []*objects.Authorization {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

func (x *DatastoreActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *DatastoreActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *DatastoreActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *DatastoreActivity) GetDisposition() string {
	if x != nil {
		return x.Disposition
	}
	return ""
}

func (x *DatastoreActivity) GetDatabucket() *objects.Databucket {
	if x != nil {
		return x.Databucket
	}
	return nil
}

func (x *DatastoreActivity) GetQueryInfo() *objects.QueryInfo {
	if x != nil {
		return x.QueryInfo
	}
	return nil
}

func (x *DatastoreActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DatastoreActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *DatastoreActivity) GetStatusId() enums.DATASTORE_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.DATASTORE_ACTIVITY_STATUS_ID(0)
}

func (x *DatastoreActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *DatastoreActivity) GetActionId() enums.DATASTORE_ACTIVITY_ACTION_ID {
	if x != nil {
		return x.ActionId
	}
	return enums.DATASTORE_ACTIVITY_ACTION_ID(0)
}

func (x *DatastoreActivity) GetHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *DatastoreActivity) GetDispositionId() enums.DATASTORE_ACTIVITY_DISPOSITION_ID {
	if x != nil {
		return x.DispositionId
	}
	return enums.DATASTORE_ACTIVITY_DISPOSITION_ID(0)
}

func (x *DatastoreActivity) GetTypeId() enums.DATASTORE_ACTIVITY_TYPE_ID {
	if x != nil {
		return x.TypeId
	}
	return enums.DATASTORE_ACTIVITY_TYPE_ID(0)
}

func (x *DatastoreActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *DatastoreActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *DatastoreActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *DatastoreActivity) GetActivityId() enums.DATASTORE_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.DATASTORE_ACTIVITY_ACTIVITY_ID(0)
}

func (x *DatastoreActivity) GetAttacks() []*objects.Attack {
	if x != nil {
		return x.Attacks
	}
	return nil
}

func (x *DatastoreActivity) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DatastoreActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DatastoreActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *DatastoreActivity) GetDstEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.DstEndpoint
	}
	return nil
}

func (x *DatastoreActivity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatastoreActivity) GetTypeUid() enums.DATASTORE_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.DATASTORE_ACTIVITY_TYPE_UID(0)
}

func (x *DatastoreActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *DatastoreActivity) GetCategoryUid() enums.DATASTORE_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.DATASTORE_ACTIVITY_CATEGORY_UID(0)
}

func (x *DatastoreActivity) GetDatabase() *objects.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *DatastoreActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DatastoreActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *DatastoreActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DatastoreActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

// Event: application
// Event UID: 2
// URL: https://schema.ocsf.io/1.2.0/classes/application_lifecycle
type ApplicationLifecycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device         *objects.Device                          `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`                                                                                                            // Caption: Device; Profile: host;
	Duration       int32                                    `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                       // Caption: Duration;
	Severity       string                                   `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                        // Caption: Severity;
	ClassUid       enums.APPLICATION_LIFECYCLE_CLASS_UID    `protobuf:"varint,4,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	CategoryUid    enums.APPLICATION_LIFECYCLE_CATEGORY_UID `protobuf:"varint,5,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	StatusCode     string                                   `protobuf:"bytes,6,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                  // Caption: Status Code;
	ActivityName   string                                   `protobuf:"bytes,7,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                            // Caption: Activity;
	ActivityId     enums.APPLICATION_LIFECYCLE_ACTIVITY_ID  `protobuf:"varint,8,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	RawData        string                                   `protobuf:"bytes,9,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                           // Caption: Raw Data;
	CategoryName   string                                   `protobuf:"bytes,10,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                           // Caption: Category;
	TypeName       string                                   `protobuf:"bytes,11,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                       // Caption: Type Name;
	Enrichments    []*objects.Enrichment                    `protobuf:"bytes,12,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                 // Caption: Enrichments;
	Count          int32                                    `protobuf:"varint,13,opt,name=count,proto3" json:"count,omitempty"`                                                                                                            // Caption: Count;
	Time           int64                                    `protobuf:"varint,14,opt,name=time,proto3" json:"time,omitempty"`                                                                                                              // Caption: Event Time;
	Api            *objects.Api                             `protobuf:"bytes,15,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                 // Caption: API Details; Profile: cloud;
	StatusDetail   string                                   `protobuf:"bytes,16,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                           // Caption: Status Details;
	TimezoneOffset int32                                    `protobuf:"varint,17,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                    // Caption: Timezone Offset;
	SeverityId     enums.APPLICATION_LIFECYCLE_SEVERITY_ID  `protobuf:"varint,18,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_SEVERITY_ID" json:"severity_id,omitempty"`    // Caption: Severity ID;
	Unmapped       *objects.Object                          `protobuf:"bytes,19,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                       // Caption: Unmapped Data;
	Metadata       *objects.Metadata                        `protobuf:"bytes,20,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                       // Caption: Metadata;
	Observables    []*objects.Observable                    `protobuf:"bytes,21,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                 // Caption: Observables;
	App            *objects.Product                         `protobuf:"bytes,22,opt,name=app,proto3" json:"app,omitempty"`                                                                                                                 // Caption: Application;
	Actor          *objects.Actor                           `protobuf:"bytes,23,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                             // Profile: host; Caption: Actor;
	StartTime      int64                                    `protobuf:"varint,24,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                   // Caption: Start Time;
	StatusId       enums.APPLICATION_LIFECYCLE_STATUS_ID    `protobuf:"varint,25,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_STATUS_ID" json:"status_id,omitempty"`            // Caption: Status ID;
	Message        string                                   `protobuf:"bytes,26,opt,name=message,proto3" json:"message,omitempty"`                                                                                                         // Caption: Message;
	TypeUid        enums.APPLICATION_LIFECYCLE_TYPE_UID     `protobuf:"varint,27,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_TYPE_UID" json:"type_uid,omitempty"`                // Caption: Type ID;
	Cloud          *objects.Cloud                           `protobuf:"bytes,28,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                             // Caption: Cloud; Profile: cloud;
	EndTime        int64                                    `protobuf:"varint,29,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                         // Caption: End Time;
	Status         string                                   `protobuf:"bytes,30,opt,name=status,proto3" json:"status,omitempty"`                                                                                                           // Caption: Status;
	ClassName      string                                   `protobuf:"bytes,31,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                    // Caption: Class;
}

func (x *ApplicationLifecycle) Reset() {
	*x = ApplicationLifecycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationLifecycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationLifecycle) ProtoMessage() {}

func (x *ApplicationLifecycle) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationLifecycle.ProtoReflect.Descriptor instead.
func (*ApplicationLifecycle) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationLifecycle) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ApplicationLifecycle) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ApplicationLifecycle) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ApplicationLifecycle) GetClassUid() enums.APPLICATION_LIFECYCLE_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.APPLICATION_LIFECYCLE_CLASS_UID(0)
}

func (x *ApplicationLifecycle) GetCategoryUid() enums.APPLICATION_LIFECYCLE_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.APPLICATION_LIFECYCLE_CATEGORY_UID(0)
}

func (x *ApplicationLifecycle) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ApplicationLifecycle) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ApplicationLifecycle) GetActivityId() enums.APPLICATION_LIFECYCLE_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.APPLICATION_LIFECYCLE_ACTIVITY_ID(0)
}

func (x *ApplicationLifecycle) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *ApplicationLifecycle) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ApplicationLifecycle) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ApplicationLifecycle) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *ApplicationLifecycle) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ApplicationLifecycle) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApplicationLifecycle) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ApplicationLifecycle) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *ApplicationLifecycle) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *ApplicationLifecycle) GetSeverityId() enums.APPLICATION_LIFECYCLE_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.APPLICATION_LIFECYCLE_SEVERITY_ID(0)
}

func (x *ApplicationLifecycle) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *ApplicationLifecycle) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ApplicationLifecycle) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *ApplicationLifecycle) GetApp() *objects.Product {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *ApplicationLifecycle) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ApplicationLifecycle) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ApplicationLifecycle) GetStatusId() enums.APPLICATION_LIFECYCLE_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.APPLICATION_LIFECYCLE_STATUS_ID(0)
}

func (x *ApplicationLifecycle) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplicationLifecycle) GetTypeUid() enums.APPLICATION_LIFECYCLE_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.APPLICATION_LIFECYCLE_TYPE_UID(0)
}

func (x *ApplicationLifecycle) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *ApplicationLifecycle) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ApplicationLifecycle) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApplicationLifecycle) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

// Event: application
// Event UID: 3
// URL: https://schema.ocsf.io/1.2.0/classes/api_activity
type ApiActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpRequest    *objects.HttpRequest            `protobuf:"bytes,1,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`                                                                       // Caption: HTTP Request;
	StartTime      int64                           `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                            // Caption: Start Time;
	Severity       string                          `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                // Caption: Severity;
	DstEndpoint    *objects.NetworkEndpoint        `protobuf:"bytes,4,opt,name=dst_endpoint,json=dstEndpoint,proto3" json:"dst_endpoint,omitempty"`                                                                       // Caption: Destination Endpoint;
	TimezoneOffset int32                           `protobuf:"varint,5,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                             // Caption: Timezone Offset;
	CategoryName   string                          `protobuf:"bytes,6,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                    // Caption: Category;
	Unmapped       *objects.Object                 `protobuf:"bytes,7,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                // Caption: Unmapped Data;
	Count          int32                           `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`                                                                                                     // Caption: Count;
	EndTime        int64                           `protobuf:"varint,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                  // Caption: End Time;
	Observables    []*objects.Observable           `protobuf:"bytes,10,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                         // Caption: Observables;
	Enrichments    []*objects.Enrichment           `protobuf:"bytes,11,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                         // Caption: Enrichments;
	Api            *objects.Api                    `protobuf:"bytes,12,opt,name=api,proto3" json:"api,omitempty"`                                                                                                         // Caption: API Details;
	Actor          *objects.Actor                  `protobuf:"bytes,13,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                     // Caption: Actor;
	Resources      []*objects.ResourceDetails      `protobuf:"bytes,14,rep,name=resources,proto3" json:"resources,omitempty"`                                                                                             // Caption: Resources Array;
	Duration       int32                           `protobuf:"varint,15,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                              // Caption: Duration;
	TypeName       string                          `protobuf:"bytes,16,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                               // Caption: Type Name;
	SeverityId     enums.API_ACTIVITY_SEVERITY_ID  `protobuf:"varint,17,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.API_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
	Time           int64                           `protobuf:"varint,18,opt,name=time,proto3" json:"time,omitempty"`                                                                                                      // Caption: Event Time;
	ClassName      string                          `protobuf:"bytes,19,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                            // Caption: Class;
	Cloud          *objects.Cloud                  `protobuf:"bytes,20,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                     // Caption: Cloud; Profile: cloud;
	TypeUid        enums.API_ACTIVITY_TYPE_UID     `protobuf:"varint,21,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.API_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	ActivityName   string                          `protobuf:"bytes,22,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                   // Caption: Activity;
	RawData        string                          `protobuf:"bytes,23,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                  // Caption: Raw Data;
	Status         string                          `protobuf:"bytes,24,opt,name=status,proto3" json:"status,omitempty"`                                                                                                   // Caption: Status;
	CategoryUid    enums.API_ACTIVITY_CATEGORY_UID `protobuf:"varint,25,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.API_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	StatusDetail   string                          `protobuf:"bytes,26,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                   // Caption: Status Details;
	Message        string                          `protobuf:"bytes,27,opt,name=message,proto3" json:"message,omitempty"`                                                                                                 // Caption: Message;
	Metadata       *objects.Metadata               `protobuf:"bytes,28,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                               // Caption: Metadata;
	SrcEndpoint    *objects.NetworkEndpoint        `protobuf:"bytes,29,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                      // Caption: Source Endpoint;
	ActivityId     enums.API_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,30,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.API_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	StatusId       enums.API_ACTIVITY_STATUS_ID    `protobuf:"varint,31,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.API_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	ClassUid       enums.API_ACTIVITY_CLASS_UID    `protobuf:"varint,32,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.API_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	StatusCode     string                          `protobuf:"bytes,33,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                         // Caption: Status Code;
}

func (x *ApiActivity) Reset() {
	*x = ApiActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiActivity) ProtoMessage() {}

func (x *ApiActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiActivity.ProtoReflect.Descriptor instead.
func (*ApiActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{3}
}

func (x *ApiActivity) GetHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *ApiActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ApiActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ApiActivity) GetDstEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.DstEndpoint
	}
	return nil
}

func (x *ApiActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *ApiActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ApiActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *ApiActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ApiActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ApiActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *ApiActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *ApiActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ApiActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ApiActivity) GetResources() []*objects.ResourceDetails {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ApiActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ApiActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *ApiActivity) GetSeverityId() enums.API_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.API_ACTIVITY_SEVERITY_ID(0)
}

func (x *ApiActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApiActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ApiActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *ApiActivity) GetTypeUid() enums.API_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.API_ACTIVITY_TYPE_UID(0)
}

func (x *ApiActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ApiActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *ApiActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiActivity) GetCategoryUid() enums.API_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.API_ACTIVITY_CATEGORY_UID(0)
}

func (x *ApiActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *ApiActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ApiActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *ApiActivity) GetActivityId() enums.API_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.API_ACTIVITY_ACTIVITY_ID(0)
}

func (x *ApiActivity) GetStatusId() enums.API_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.API_ACTIVITY_STATUS_ID(0)
}

func (x *ApiActivity) GetClassUid() enums.API_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.API_ACTIVITY_CLASS_UID(0)
}

func (x *ApiActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

// Event: application
// Event UID: 7
// URL: https://schema.ocsf.io/1.2.0/classes/scan_activity
type ScanActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy           *objects.Policy                  `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`                                                                                                     // Caption: Policy;
	StartTime        int64                            `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                             // Caption: Start Time;
	NumDetections    int32                            `protobuf:"varint,3,opt,name=num_detections,json=numDetections,proto3" json:"num_detections,omitempty"`                                                                 // Caption: Detections;
	Api              *objects.Api                     `protobuf:"bytes,4,opt,name=api,proto3" json:"api,omitempty"`                                                                                                           // Caption: API Details; Profile: cloud;
	Time             int64                            `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`                                                                                                        // Caption: Event Time;
	EndTime          int64                            `protobuf:"varint,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                   // Caption: End Time;
	NumProcesses     int32                            `protobuf:"varint,7,opt,name=num_processes,json=numProcesses,proto3" json:"num_processes,omitempty"`                                                                    // Caption: Scanned Processes;
	CommandUid       string                           `protobuf:"bytes,8,opt,name=command_uid,json=commandUid,proto3" json:"command_uid,omitempty"`                                                                           // Caption: Command UID;
	Duration         int32                            `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                // Caption: Duration;
	NumSkippedItems  int32                            `protobuf:"varint,10,opt,name=num_skipped_items,json=numSkippedItems,proto3" json:"num_skipped_items,omitempty"`                                                        // Caption: Skipped;
	NumRegistryItems int32                            `protobuf:"varint,11,opt,name=num_registry_items,json=numRegistryItems,proto3" json:"num_registry_items,omitempty"`                                                     // Caption: Scanned Registry Items;
	TypeUid          enums.SCAN_ACTIVITY_TYPE_UID     `protobuf:"varint,12,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	Message          string                           `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`                                                                                                  // Caption: Message;
	SeverityId       enums.SCAN_ACTIVITY_SEVERITY_ID  `protobuf:"varint,14,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
	NumTrustedItems  int32                            `protobuf:"varint,15,opt,name=num_trusted_items,json=numTrustedItems,proto3" json:"num_trusted_items,omitempty"`                                                        // Caption: Trusted;
	NumResolutions   int32                            `protobuf:"varint,16,opt,name=num_resolutions,json=numResolutions,proto3" json:"num_resolutions,omitempty"`                                                             // Caption: Resolutions;
	ClassUid         enums.SCAN_ACTIVITY_CLASS_UID    `protobuf:"varint,17,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	CategoryName     string                           `protobuf:"bytes,18,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                    // Caption: Category;
	RawData          string                           `protobuf:"bytes,19,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                   // Caption: Raw Data;
	Unmapped         *objects.Object                  `protobuf:"bytes,20,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                // Caption: Unmapped Data;
	ActivityName     string                           `protobuf:"bytes,21,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                    // Caption: Activity;
	Total            int32                            `protobuf:"varint,22,opt,name=total,proto3" json:"total,omitempty"`                                                                                                     // Caption: Total;
	Actor            *objects.Actor                   `protobuf:"bytes,23,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                      // Caption: Actor; Profile: host;
	StatusCode       string                           `protobuf:"bytes,24,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                          // Caption: Status Code;
	Cloud            *objects.Cloud                   `protobuf:"bytes,25,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                      // Profile: cloud; Caption: Cloud;
	StatusId         enums.SCAN_ACTIVITY_STATUS_ID    `protobuf:"varint,26,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	Metadata         *objects.Metadata                `protobuf:"bytes,27,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                // Caption: Metadata;
	ScheduleUid      string                           `protobuf:"bytes,28,opt,name=schedule_uid,json=scheduleUid,proto3" json:"schedule_uid,omitempty"`                                                                       // Caption: Schedule UID;
	NumFolders       int32                            `protobuf:"varint,29,opt,name=num_folders,json=numFolders,proto3" json:"num_folders,omitempty"`                                                                         // Caption: Scanned Folders;
	NumNetworkItems  int32                            `protobuf:"varint,30,opt,name=num_network_items,json=numNetworkItems,proto3" json:"num_network_items,omitempty"`                                                        // Caption: Scanned Network Items;
	Status           string                           `protobuf:"bytes,31,opt,name=status,proto3" json:"status,omitempty"`                                                                                                    // Caption: Status;
	Severity         string                           `protobuf:"bytes,32,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                // Caption: Severity;
	ClassName        string                           `protobuf:"bytes,33,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                             // Caption: Class;
	StatusDetail     string                           `protobuf:"bytes,34,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                    // Caption: Status Details;
	TimezoneOffset   int32                            `protobuf:"varint,35,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                             // Caption: Timezone Offset;
	Scan             *objects.Scan                    `protobuf:"bytes,36,opt,name=scan,proto3" json:"scan,omitempty"`                                                                                                        // Caption: Scan;
	NumFiles         int32                            `protobuf:"varint,37,opt,name=num_files,json=numFiles,proto3" json:"num_files,omitempty"`                                                                               // Caption: Scanned Files;
	Observables      []*objects.Observable            `protobuf:"bytes,38,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                          // Caption: Observables;
	Enrichments      []*objects.Enrichment            `protobuf:"bytes,39,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                          // Caption: Enrichments;
	CategoryUid      enums.SCAN_ACTIVITY_CATEGORY_UID `protobuf:"varint,40,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	ActivityId       enums.SCAN_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,41,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	Device           *objects.Device                  `protobuf:"bytes,42,opt,name=device,proto3" json:"device,omitempty"`                                                                                                    // Caption: Device; Profile: host;
	Count            int32                            `protobuf:"varint,43,opt,name=count,proto3" json:"count,omitempty"`                                                                                                     // Caption: Count;
	TypeName         string                           `protobuf:"bytes,44,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                // Caption: Type Name;
}

func (x *ScanActivity) Reset() {
	*x = ScanActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanActivity) ProtoMessage() {}

func (x *ScanActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanActivity.ProtoReflect.Descriptor instead.
func (*ScanActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{4}
}

func (x *ScanActivity) GetPolicy() *objects.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *ScanActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ScanActivity) GetNumDetections() int32 {
	if x != nil {
		return x.NumDetections
	}
	return 0
}

func (x *ScanActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *ScanActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ScanActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ScanActivity) GetNumProcesses() int32 {
	if x != nil {
		return x.NumProcesses
	}
	return 0
}

func (x *ScanActivity) GetCommandUid() string {
	if x != nil {
		return x.CommandUid
	}
	return ""
}

func (x *ScanActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ScanActivity) GetNumSkippedItems() int32 {
	if x != nil {
		return x.NumSkippedItems
	}
	return 0
}

func (x *ScanActivity) GetNumRegistryItems() int32 {
	if x != nil {
		return x.NumRegistryItems
	}
	return 0
}

func (x *ScanActivity) GetTypeUid() enums.SCAN_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.SCAN_ACTIVITY_TYPE_UID(0)
}

func (x *ScanActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScanActivity) GetSeverityId() enums.SCAN_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.SCAN_ACTIVITY_SEVERITY_ID(0)
}

func (x *ScanActivity) GetNumTrustedItems() int32 {
	if x != nil {
		return x.NumTrustedItems
	}
	return 0
}

func (x *ScanActivity) GetNumResolutions() int32 {
	if x != nil {
		return x.NumResolutions
	}
	return 0
}

func (x *ScanActivity) GetClassUid() enums.SCAN_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.SCAN_ACTIVITY_CLASS_UID(0)
}

func (x *ScanActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ScanActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *ScanActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *ScanActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ScanActivity) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ScanActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ScanActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *ScanActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *ScanActivity) GetStatusId() enums.SCAN_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.SCAN_ACTIVITY_STATUS_ID(0)
}

func (x *ScanActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ScanActivity) GetScheduleUid() string {
	if x != nil {
		return x.ScheduleUid
	}
	return ""
}

func (x *ScanActivity) GetNumFolders() int32 {
	if x != nil {
		return x.NumFolders
	}
	return 0
}

func (x *ScanActivity) GetNumNetworkItems() int32 {
	if x != nil {
		return x.NumNetworkItems
	}
	return 0
}

func (x *ScanActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ScanActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ScanActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *ScanActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *ScanActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *ScanActivity) GetScan() *objects.Scan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *ScanActivity) GetNumFiles() int32 {
	if x != nil {
		return x.NumFiles
	}
	return 0
}

func (x *ScanActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *ScanActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *ScanActivity) GetCategoryUid() enums.SCAN_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.SCAN_ACTIVITY_CATEGORY_UID(0)
}

func (x *ScanActivity) GetActivityId() enums.SCAN_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.SCAN_ACTIVITY_ACTIVITY_ID(0)
}

func (x *ScanActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ScanActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ScanActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// Event: application
// Event UID: 4
// URL: https://schema.ocsf.io/1.2.0/classes/web_resource_access_activity
type WebResourceAccessActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tls                 *objects.Tls                                    `protobuf:"bytes,1,opt,name=tls,proto3" json:"tls,omitempty"`                                                                                                                          // Caption: TLS;
	ClassUid            enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID    `protobuf:"varint,2,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`              // Caption: Class ID;
	Severity            string                                          `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                                // Caption: Severity;
	ProxyTraffic        *objects.NetworkTraffic                         `protobuf:"bytes,4,opt,name=proxy_traffic,json=proxyTraffic,proto3" json:"proxy_traffic,omitempty"`                                                                                    // Caption: Proxy Traffic; Profile: network_proxy;
	Proxy               *objects.NetworkProxy                           `protobuf:"bytes,5,opt,name=proxy,proto3" json:"proxy,omitempty"`                                                                                                                      // Caption: Proxy;
	ClassName           string                                          `protobuf:"bytes,6,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                             // Caption: Class;
	ActivityName        string                                          `protobuf:"bytes,7,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                    // Caption: Activity;
	Time                int64                                           `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                       // Caption: Event Time;
	ProxyConnectionInfo *objects.NetworkConnectionInfo                  `protobuf:"bytes,9,opt,name=proxy_connection_info,json=proxyConnectionInfo,proto3" json:"proxy_connection_info,omitempty"`                                                             // Caption: Proxy Connection Info; Profile: network_proxy;
	Status              string                                          `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`                                                                                                                   // Caption: Status;
	TypeUid             enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID     `protobuf:"varint,11,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	SeverityId          enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID  `protobuf:"varint,12,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
	Count               int32                                           `protobuf:"varint,13,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                    // Caption: Count;
	Enrichments         []*objects.Enrichment                           `protobuf:"bytes,14,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                         // Caption: Enrichments;
	CategoryName        string                                          `protobuf:"bytes,15,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                   // Caption: Category;
	Duration            int32                                           `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                              // Caption: Duration;
	ActivityId          enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID  `protobuf:"varint,17,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	StatusDetail        string                                          `protobuf:"bytes,18,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                                   // Caption: Status Details;
	Message             string                                          `protobuf:"bytes,19,opt,name=message,proto3" json:"message,omitempty"`                                                                                                                 // Caption: Message;
	Unmapped            *objects.Object                                 `protobuf:"bytes,20,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                               // Caption: Unmapped Data;
	Device              *objects.Device                                 `protobuf:"bytes,21,opt,name=device,proto3" json:"device,omitempty"`                                                                                                                   // Caption: Device; Profile: host;
	SrcEndpoint         *objects.NetworkEndpoint                        `protobuf:"bytes,22,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                                      // Caption: Source Endpoint;
	ProxyHttpRequest    *objects.HttpRequest                            `protobuf:"bytes,23,opt,name=proxy_http_request,json=proxyHttpRequest,proto3" json:"proxy_http_request,omitempty"`                                                                     // Caption: Proxy HTTP Request; Profile: network_proxy;
	ProxyHttpResponse   *objects.HttpResponse                           `protobuf:"bytes,24,opt,name=proxy_http_response,json=proxyHttpResponse,proto3" json:"proxy_http_response,omitempty"`                                                                  // Caption: Proxy HTTP Response; Profile: network_proxy;
	StartTime           int64                                           `protobuf:"varint,25,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                           // Caption: Start Time;
	StatusId            enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID    `protobuf:"varint,26,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`             // Caption: Status ID;
	ProxyTls            *objects.Tls                                    `protobuf:"bytes,27,opt,name=proxy_tls,json=proxyTls,proto3" json:"proxy_tls,omitempty"`                                                                                               // Caption: Proxy TLS; Profile: network_proxy;
	HttpResponse        *objects.HttpResponse                           `protobuf:"bytes,28,opt,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`                                                                                   // Caption: HTTP Response;
	EndTime             int64                                           `protobuf:"varint,29,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                                 // Caption: End Time;
	TypeName            string                                          `protobuf:"bytes,30,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                               // Caption: Type Name;
	ProxyEndpoint       *objects.NetworkProxy                           `protobuf:"bytes,31,opt,name=proxy_endpoint,json=proxyEndpoint,proto3" json:"proxy_endpoint,omitempty"`                                                                                // Profile: network_proxy; Caption: Proxy Endpoint;
	Observables         []*objects.Observable                           `protobuf:"bytes,32,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                         // Caption: Observables;
	WebResources        []*objects.WebResource                          `protobuf:"bytes,33,rep,name=web_resources,json=webResources,proto3" json:"web_resources,omitempty"`                                                                                   // Caption: Web Resources;
	StatusCode          string                                          `protobuf:"bytes,34,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                         // Caption: Status Code;
	CategoryUid         enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID `protobuf:"varint,35,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	Api                 *objects.Api                                    `protobuf:"bytes,36,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                         // Caption: API Details; Profile: cloud;
	Metadata            *objects.Metadata                               `protobuf:"bytes,37,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                               // Caption: Metadata;
	Cloud               *objects.Cloud                                  `protobuf:"bytes,38,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                     // Caption: Cloud; Profile: cloud;
	Actor               *objects.Actor                                  `protobuf:"bytes,39,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                     // Caption: Actor; Profile: host;
	HttpRequest         *objects.HttpRequest                            `protobuf:"bytes,40,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`                                                                                      // Caption: HTTP Request;
	TimezoneOffset      int32                                           `protobuf:"varint,41,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                            // Caption: Timezone Offset;
	RawData             string                                          `protobuf:"bytes,42,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                                  // Caption: Raw Data;
}

func (x *WebResourceAccessActivity) Reset() {
	*x = WebResourceAccessActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebResourceAccessActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebResourceAccessActivity) ProtoMessage() {}

func (x *WebResourceAccessActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebResourceAccessActivity.ProtoReflect.Descriptor instead.
func (*WebResourceAccessActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{5}
}

func (x *WebResourceAccessActivity) GetTls() *objects.Tls {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *WebResourceAccessActivity) GetClassUid() enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID(0)
}

func (x *WebResourceAccessActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *WebResourceAccessActivity) GetProxyTraffic() *objects.NetworkTraffic {
	if x != nil {
		return x.ProxyTraffic
	}
	return nil
}

func (x *WebResourceAccessActivity) GetProxy() *objects.NetworkProxy {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *WebResourceAccessActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WebResourceAccessActivity) GetProxyConnectionInfo() *objects.NetworkConnectionInfo {
	if x != nil {
		return x.ProxyConnectionInfo
	}
	return nil
}

func (x *WebResourceAccessActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WebResourceAccessActivity) GetTypeUid() enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID(0)
}

func (x *WebResourceAccessActivity) GetSeverityId() enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID(0)
}

func (x *WebResourceAccessActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WebResourceAccessActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *WebResourceAccessActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *WebResourceAccessActivity) GetActivityId() enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID(0)
}

func (x *WebResourceAccessActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *WebResourceAccessActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WebResourceAccessActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *WebResourceAccessActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *WebResourceAccessActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *WebResourceAccessActivity) GetProxyHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.ProxyHttpRequest
	}
	return nil
}

func (x *WebResourceAccessActivity) GetProxyHttpResponse() *objects.HttpResponse {
	if x != nil {
		return x.ProxyHttpResponse
	}
	return nil
}

func (x *WebResourceAccessActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *WebResourceAccessActivity) GetStatusId() enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID(0)
}

func (x *WebResourceAccessActivity) GetProxyTls() *objects.Tls {
	if x != nil {
		return x.ProxyTls
	}
	return nil
}

func (x *WebResourceAccessActivity) GetHttpResponse() *objects.HttpResponse {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

func (x *WebResourceAccessActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WebResourceAccessActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *WebResourceAccessActivity) GetProxyEndpoint() *objects.NetworkProxy {
	if x != nil {
		return x.ProxyEndpoint
	}
	return nil
}

func (x *WebResourceAccessActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *WebResourceAccessActivity) GetWebResources() []*objects.WebResource {
	if x != nil {
		return x.WebResources
	}
	return nil
}

func (x *WebResourceAccessActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *WebResourceAccessActivity) GetCategoryUid() enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID(0)
}

func (x *WebResourceAccessActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *WebResourceAccessActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WebResourceAccessActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *WebResourceAccessActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *WebResourceAccessActivity) GetHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *WebResourceAccessActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *WebResourceAccessActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

// Event: application
// Event UID: 1
// URL: https://schema.ocsf.io/1.2.0/classes/web_resources_activity
type WebResourcesActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassName           string                                      `protobuf:"bytes,1,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                                               // Caption: Class;
	ActivityId          enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID    `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID" json:"activity_id,omitempty"`              // Caption: Activity ID;
	Time                int64                                       `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`                                                                                                                         // Caption: Event Time;
	Duration            int32                                       `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                                 // Caption: Duration;
	Metadata            *objects.Metadata                           `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                                                  // Caption: Metadata;
	StatusCode          string                                      `protobuf:"bytes,6,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                                            // Caption: Status Code;
	Api                 *objects.Api                                `protobuf:"bytes,7,opt,name=api,proto3" json:"api,omitempty"`                                                                                                                            // Caption: API Details; Profile: cloud;
	Malware             []*objects.Malware                          `protobuf:"bytes,8,rep,name=malware,proto3" json:"malware,omitempty"`                                                                                                                    // Caption: Malware; Profile: security_control;
	TimezoneOffset      int32                                       `protobuf:"varint,9,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                                               // Caption: Timezone Offset;
	Message             string                                      `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`                                                                                                                   // Caption: Message;
	RawData             string                                      `protobuf:"bytes,11,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                                    // Caption: Raw Data;
	Enrichments         []*objects.Enrichment                       `protobuf:"bytes,12,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                                           // Caption: Enrichments;
	HttpResponse        *objects.HttpResponse                       `protobuf:"bytes,13,opt,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`                                                                                     // Caption: HTTP Response;
	ActionId            enums.WEB_RESOURCES_ACTIVITY_ACTION_ID      `protobuf:"varint,14,opt,name=action_id,json=actionId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTION_ID" json:"action_id,omitempty"`                     // Caption: Action ID; Profile: security_control;
	ClassUid            enums.WEB_RESOURCES_ACTIVITY_CLASS_UID      `protobuf:"varint,15,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CLASS_UID" json:"class_uid,omitempty"`                     // Caption: Class ID;
	StatusDetail        string                                      `protobuf:"bytes,16,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                                     // Caption: Status Details;
	SeverityId          enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID    `protobuf:"varint,17,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID" json:"severity_id,omitempty"`             // Caption: Severity ID;
	TypeName            string                                      `protobuf:"bytes,18,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                                                 // Caption: Type Name;
	Cloud               *objects.Cloud                              `protobuf:"bytes,19,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                                       // Caption: Cloud; Profile: cloud;
	EndTime             int64                                       `protobuf:"varint,20,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                                   // Caption: End Time;
	HttpRequest         *objects.HttpRequest                        `protobuf:"bytes,21,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`                                                                                        // Caption: HTTP Request;
	ProxyHttpResponse   *objects.HttpResponse                       `protobuf:"bytes,22,opt,name=proxy_http_response,json=proxyHttpResponse,proto3" json:"proxy_http_response,omitempty"`                                                                    // Caption: Proxy HTTP Response; Profile: network_proxy;
	DispositionId       enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID `protobuf:"varint,23,opt,name=disposition_id,json=dispositionId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID" json:"disposition_id,omitempty"` // Caption: Disposition ID; Profile: security_control;
	Action              string                                      `protobuf:"bytes,24,opt,name=action,proto3" json:"action,omitempty"`                                                                                                                     // Caption: Action; Profile: security_control;
	SrcEndpoint         *objects.NetworkEndpoint                    `protobuf:"bytes,25,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                                        // Caption: Source Endpoint;
	Unmapped            *objects.Object                             `protobuf:"bytes,26,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                                                 // Caption: Unmapped Data;
	Status              string                                      `protobuf:"bytes,27,opt,name=status,proto3" json:"status,omitempty"`                                                                                                                     // Caption: Status;
	Disposition         string                                      `protobuf:"bytes,28,opt,name=disposition,proto3" json:"disposition,omitempty"`                                                                                                           // Caption: Disposition; Profile: security_control;
	FirewallRule        *objects.FirewallRule                       `protobuf:"bytes,29,opt,name=firewall_rule,json=firewallRule,proto3" json:"firewall_rule,omitempty"`                                                                                     // Caption: Firewall Rule; Profile: security_control;
	CategoryUid         enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID   `protobuf:"varint,30,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID" json:"category_uid,omitempty"`         // Caption: Category ID;
	CategoryName        string                                      `protobuf:"bytes,31,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                                     // Caption: Category;
	Observables         []*objects.Observable                       `protobuf:"bytes,32,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                                           // Caption: Observables;
	Count               int32                                       `protobuf:"varint,33,opt,name=count,proto3" json:"count,omitempty"`                                                                                                                      // Caption: Count;
	ProxyConnectionInfo *objects.NetworkConnectionInfo              `protobuf:"bytes,34,opt,name=proxy_connection_info,json=proxyConnectionInfo,proto3" json:"proxy_connection_info,omitempty"`                                                              // Caption: Proxy Connection Info; Profile: network_proxy;
	WebResources        []*objects.WebResource                      `protobuf:"bytes,35,rep,name=web_resources,json=webResources,proto3" json:"web_resources,omitempty"`                                                                                     // Caption: Web Resources;
	Tls                 *objects.Tls                                `protobuf:"bytes,36,opt,name=tls,proto3" json:"tls,omitempty"`                                                                                                                           // Caption: TLS;
	Authorizations      []*objects.Authorization                    `protobuf:"bytes,37,rep,name=authorizations,proto3" json:"authorizations,omitempty"`                                                                                                     // Caption: Authorization Information; Profile: security_control;
	ProxyTraffic        *objects.NetworkTraffic                     `protobuf:"bytes,38,opt,name=proxy_traffic,json=proxyTraffic,proto3" json:"proxy_traffic,omitempty"`                                                                                     // Caption: Proxy Traffic; Profile: network_proxy;
	DstEndpoint         *objects.NetworkEndpoint                    `protobuf:"bytes,39,opt,name=dst_endpoint,json=dstEndpoint,proto3" json:"dst_endpoint,omitempty"`                                                                                        // Caption: Destination Endpoint;
	WebResourcesResult  []*objects.WebResource                      `protobuf:"bytes,40,rep,name=web_resources_result,json=webResourcesResult,proto3" json:"web_resources_result,omitempty"`                                                                 // Caption: Web Resources Result;
	Device              *objects.Device                             `protobuf:"bytes,41,opt,name=device,proto3" json:"device,omitempty"`                                                                                                                     // Profile: host; Caption: Device;
	ActivityName        string                                      `protobuf:"bytes,42,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                                     // Caption: Activity;
	StatusId            enums.WEB_RESOURCES_ACTIVITY_STATUS_ID      `protobuf:"varint,43,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_STATUS_ID" json:"status_id,omitempty"`                     // Caption: Status ID;
	TypeUid             enums.WEB_RESOURCES_ACTIVITY_TYPE_UID       `protobuf:"varint,44,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_TYPE_UID" json:"type_uid,omitempty"`                         // Caption: Type ID;
	Severity            string                                      `protobuf:"bytes,45,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                                                 // Caption: Severity;
	Attacks             []*objects.Attack                           `protobuf:"bytes,46,rep,name=attacks,proto3" json:"attacks,omitempty"`                                                                                                                   // Caption: MITRE ATT&CK® Details; Profile: security_control;
	Actor               *objects.Actor                              `protobuf:"bytes,47,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                                       // Profile: host; Caption: Actor;
	ProxyEndpoint       *objects.NetworkProxy                       `protobuf:"bytes,48,opt,name=proxy_endpoint,json=proxyEndpoint,proto3" json:"proxy_endpoint,omitempty"`                                                                                  // Caption: Proxy Endpoint; Profile: network_proxy;
	ProxyHttpRequest    *objects.HttpRequest                        `protobuf:"bytes,49,opt,name=proxy_http_request,json=proxyHttpRequest,proto3" json:"proxy_http_request,omitempty"`                                                                       // Caption: Proxy HTTP Request; Profile: network_proxy;
	ProxyTls            *objects.Tls                                `protobuf:"bytes,50,opt,name=proxy_tls,json=proxyTls,proto3" json:"proxy_tls,omitempty"`                                                                                                 // Caption: Proxy TLS; Profile: network_proxy;
	StartTime           int64                                       `protobuf:"varint,51,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                             // Caption: Start Time;
}

func (x *WebResourcesActivity) Reset() {
	*x = WebResourcesActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebResourcesActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebResourcesActivity) ProtoMessage() {}

func (x *WebResourcesActivity) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebResourcesActivity.ProtoReflect.Descriptor instead.
func (*WebResourcesActivity) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{6}
}

func (x *WebResourcesActivity) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *WebResourcesActivity) GetActivityId() enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID(0)
}

func (x *WebResourcesActivity) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *WebResourcesActivity) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *WebResourcesActivity) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WebResourcesActivity) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *WebResourcesActivity) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *WebResourcesActivity) GetMalware() []*objects.Malware {
	if x != nil {
		return x.Malware
	}
	return nil
}

func (x *WebResourcesActivity) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *WebResourcesActivity) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WebResourcesActivity) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *WebResourcesActivity) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *WebResourcesActivity) GetHttpResponse() *objects.HttpResponse {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

func (x *WebResourcesActivity) GetActionId() enums.WEB_RESOURCES_ACTIVITY_ACTION_ID {
	if x != nil {
		return x.ActionId
	}
	return enums.WEB_RESOURCES_ACTIVITY_ACTION_ID(0)
}

func (x *WebResourcesActivity) GetClassUid() enums.WEB_RESOURCES_ACTIVITY_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.WEB_RESOURCES_ACTIVITY_CLASS_UID(0)
}

func (x *WebResourcesActivity) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *WebResourcesActivity) GetSeverityId() enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID(0)
}

func (x *WebResourcesActivity) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *WebResourcesActivity) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *WebResourcesActivity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WebResourcesActivity) GetHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *WebResourcesActivity) GetProxyHttpResponse() *objects.HttpResponse {
	if x != nil {
		return x.ProxyHttpResponse
	}
	return nil
}

func (x *WebResourcesActivity) GetDispositionId() enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID {
	if x != nil {
		return x.DispositionId
	}
	return enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID(0)
}

func (x *WebResourcesActivity) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *WebResourcesActivity) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *WebResourcesActivity) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *WebResourcesActivity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WebResourcesActivity) GetDisposition() string {
	if x != nil {
		return x.Disposition
	}
	return ""
}

func (x *WebResourcesActivity) GetFirewallRule() *objects.FirewallRule {
	if x != nil {
		return x.FirewallRule
	}
	return nil
}

func (x *WebResourcesActivity) GetCategoryUid() enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID(0)
}

func (x *WebResourcesActivity) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *WebResourcesActivity) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *WebResourcesActivity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WebResourcesActivity) GetProxyConnectionInfo() *objects.NetworkConnectionInfo {
	if x != nil {
		return x.ProxyConnectionInfo
	}
	return nil
}

func (x *WebResourcesActivity) GetWebResources() []*objects.WebResource {
	if x != nil {
		return x.WebResources
	}
	return nil
}

func (x *WebResourcesActivity) GetTls() *objects.Tls {
	if x != nil {
		return x.Tls
	}
	return nil
}

func (x *WebResourcesActivity) GetAuthorizations() []*objects.Authorization {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

func (x *WebResourcesActivity) GetProxyTraffic() *objects.NetworkTraffic {
	if x != nil {
		return x.ProxyTraffic
	}
	return nil
}

func (x *WebResourcesActivity) GetDstEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.DstEndpoint
	}
	return nil
}

func (x *WebResourcesActivity) GetWebResourcesResult() []*objects.WebResource {
	if x != nil {
		return x.WebResourcesResult
	}
	return nil
}

func (x *WebResourcesActivity) GetDevice() *objects.Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *WebResourcesActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *WebResourcesActivity) GetStatusId() enums.WEB_RESOURCES_ACTIVITY_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.WEB_RESOURCES_ACTIVITY_STATUS_ID(0)
}

func (x *WebResourcesActivity) GetTypeUid() enums.WEB_RESOURCES_ACTIVITY_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.WEB_RESOURCES_ACTIVITY_TYPE_UID(0)
}

func (x *WebResourcesActivity) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *WebResourcesActivity) GetAttacks() []*objects.Attack {
	if x != nil {
		return x.Attacks
	}
	return nil
}

func (x *WebResourcesActivity) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *WebResourcesActivity) GetProxyEndpoint() *objects.NetworkProxy {
	if x != nil {
		return x.ProxyEndpoint
	}
	return nil
}

func (x *WebResourcesActivity) GetProxyHttpRequest() *objects.HttpRequest {
	if x != nil {
		return x.ProxyHttpRequest
	}
	return nil
}

func (x *WebResourcesActivity) GetProxyTls() *objects.Tls {
	if x != nil {
		return x.ProxyTls
	}
	return nil
}

func (x *WebResourcesActivity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

// Event: application
// Event UID: 6
// URL: https://schema.ocsf.io/1.2.0/classes/file_hosting
type FileHosting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api            *objects.Api                    `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`                                                                                                          // Caption: API Details; Profile: cloud;
	Count          int32                           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`                                                                                                     // Caption: Count;
	Duration       int32                           `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                               // Caption: Duration;
	StatusId       enums.FILE_HOSTING_STATUS_ID    `protobuf:"varint,4,opt,name=status_id,json=statusId,proto3,enum=ocsf.v1_2_0.events.application.enums.FILE_HOSTING_STATUS_ID" json:"status_id,omitempty"`              // Caption: Status ID;
	DstEndpoint    *objects.NetworkEndpoint        `protobuf:"bytes,5,opt,name=dst_endpoint,json=dstEndpoint,proto3" json:"dst_endpoint,omitempty"`                                                                       // Caption: Destination Endpoint;
	Enrichments    []*objects.Enrichment           `protobuf:"bytes,6,rep,name=enrichments,proto3" json:"enrichments,omitempty"`                                                                                          // Caption: Enrichments;
	TimezoneOffset int32                           `protobuf:"varint,7,opt,name=timezone_offset,json=timezoneOffset,proto3" json:"timezone_offset,omitempty"`                                                             // Caption: Timezone Offset;
	Status         string                          `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`                                                                                                    // Caption: Status;
	ConnectionInfo *objects.NetworkConnectionInfo  `protobuf:"bytes,9,opt,name=connection_info,json=connectionInfo,proto3" json:"connection_info,omitempty"`                                                              // Caption: Connection Info;
	ActivityId     enums.FILE_HOSTING_ACTIVITY_ID  `protobuf:"varint,10,opt,name=activity_id,json=activityId,proto3,enum=ocsf.v1_2_0.events.application.enums.FILE_HOSTING_ACTIVITY_ID" json:"activity_id,omitempty"`     // Caption: Activity ID;
	TypeName       string                          `protobuf:"bytes,11,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`                                                                               // Caption: Type Name;
	RawData        string                          `protobuf:"bytes,12,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                                                                                  // Caption: Raw Data;
	SrcEndpoint    *objects.NetworkEndpoint        `protobuf:"bytes,13,opt,name=src_endpoint,json=srcEndpoint,proto3" json:"src_endpoint,omitempty"`                                                                      // Caption: Source Endpoint;
	Actor          *objects.Actor                  `protobuf:"bytes,14,opt,name=actor,proto3" json:"actor,omitempty"`                                                                                                     // Caption: Actor;
	StartTime      int64                           `protobuf:"varint,15,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                           // Caption: Start Time;
	ClassUid       enums.FILE_HOSTING_CLASS_UID    `protobuf:"varint,16,opt,name=class_uid,json=classUid,proto3,enum=ocsf.v1_2_0.events.application.enums.FILE_HOSTING_CLASS_UID" json:"class_uid,omitempty"`             // Caption: Class ID;
	File           *objects.File                   `protobuf:"bytes,17,opt,name=file,proto3" json:"file,omitempty"`                                                                                                       // Caption: File;
	Message        string                          `protobuf:"bytes,18,opt,name=message,proto3" json:"message,omitempty"`                                                                                                 // Caption: Message;
	Severity       string                          `protobuf:"bytes,19,opt,name=severity,proto3" json:"severity,omitempty"`                                                                                               // Caption: Severity;
	ActivityName   string                          `protobuf:"bytes,20,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                                                   // Caption: Activity;
	StatusDetail   string                          `protobuf:"bytes,21,opt,name=status_detail,json=statusDetail,proto3" json:"status_detail,omitempty"`                                                                   // Caption: Status Details;
	SeverityId     enums.FILE_HOSTING_SEVERITY_ID  `protobuf:"varint,22,opt,name=severity_id,json=severityId,proto3,enum=ocsf.v1_2_0.events.application.enums.FILE_HOSTING_SEVERITY_ID" json:"severity_id,omitempty"`     // Caption: Severity ID;
	EndTime        int64                           `protobuf:"varint,23,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                                 // Caption: End Time;
	StatusCode     string                          `protobuf:"bytes,24,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                                                                         // Caption: Status Code;
	CategoryUid    enums.FILE_HOSTING_CATEGORY_UID `protobuf:"varint,25,opt,name=category_uid,json=categoryUid,proto3,enum=ocsf.v1_2_0.events.application.enums.FILE_HOSTING_CATEGORY_UID" json:"category_uid,omitempty"` // Caption: Category ID;
	Metadata       *objects.Metadata               `protobuf:"bytes,26,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                                               // Caption: Metadata;
	Observables    []*objects.Observable           `protobuf:"bytes,27,rep,name=observables,proto3" json:"observables,omitempty"`                                                                                         // Caption: Observables;
	Unmapped       *objects.Object                 `protobuf:"bytes,28,opt,name=unmapped,proto3" json:"unmapped,omitempty"`                                                                                               // Caption: Unmapped Data;
	Cloud          *objects.Cloud                  `protobuf:"bytes,29,opt,name=cloud,proto3" json:"cloud,omitempty"`                                                                                                     // Caption: Cloud; Profile: cloud;
	Time           int64                           `protobuf:"varint,30,opt,name=time,proto3" json:"time,omitempty"`                                                                                                      // Caption: Event Time;
	ExpirationTime int64                           `protobuf:"varint,31,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`                                                            // Caption: Expiration Time;
	TypeUid        enums.FILE_HOSTING_TYPE_UID     `protobuf:"varint,32,opt,name=type_uid,json=typeUid,proto3,enum=ocsf.v1_2_0.events.application.enums.FILE_HOSTING_TYPE_UID" json:"type_uid,omitempty"`                 // Caption: Type ID;
	CategoryName   string                          `protobuf:"bytes,33,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`                                                                   // Caption: Category;
	ClassName      string                          `protobuf:"bytes,34,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`                                                                            // Caption: Class;
}

func (x *FileHosting) Reset() {
	*x = FileHosting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileHosting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileHosting) ProtoMessage() {}

func (x *FileHosting) ProtoReflect() protoreflect.Message {
	mi := &file_ocsf_v1_2_0_events_application_application_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileHosting.ProtoReflect.Descriptor instead.
func (*FileHosting) Descriptor() ([]byte, []int) {
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP(), []int{7}
}

func (x *FileHosting) GetApi() *objects.Api {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *FileHosting) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FileHosting) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *FileHosting) GetStatusId() enums.FILE_HOSTING_STATUS_ID {
	if x != nil {
		return x.StatusId
	}
	return enums.FILE_HOSTING_STATUS_ID(0)
}

func (x *FileHosting) GetDstEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.DstEndpoint
	}
	return nil
}

func (x *FileHosting) GetEnrichments() []*objects.Enrichment {
	if x != nil {
		return x.Enrichments
	}
	return nil
}

func (x *FileHosting) GetTimezoneOffset() int32 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *FileHosting) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileHosting) GetConnectionInfo() *objects.NetworkConnectionInfo {
	if x != nil {
		return x.ConnectionInfo
	}
	return nil
}

func (x *FileHosting) GetActivityId() enums.FILE_HOSTING_ACTIVITY_ID {
	if x != nil {
		return x.ActivityId
	}
	return enums.FILE_HOSTING_ACTIVITY_ID(0)
}

func (x *FileHosting) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *FileHosting) GetRawData() string {
	if x != nil {
		return x.RawData
	}
	return ""
}

func (x *FileHosting) GetSrcEndpoint() *objects.NetworkEndpoint {
	if x != nil {
		return x.SrcEndpoint
	}
	return nil
}

func (x *FileHosting) GetActor() *objects.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *FileHosting) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FileHosting) GetClassUid() enums.FILE_HOSTING_CLASS_UID {
	if x != nil {
		return x.ClassUid
	}
	return enums.FILE_HOSTING_CLASS_UID(0)
}

func (x *FileHosting) GetFile() *objects.File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileHosting) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileHosting) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *FileHosting) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *FileHosting) GetStatusDetail() string {
	if x != nil {
		return x.StatusDetail
	}
	return ""
}

func (x *FileHosting) GetSeverityId() enums.FILE_HOSTING_SEVERITY_ID {
	if x != nil {
		return x.SeverityId
	}
	return enums.FILE_HOSTING_SEVERITY_ID(0)
}

func (x *FileHosting) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *FileHosting) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *FileHosting) GetCategoryUid() enums.FILE_HOSTING_CATEGORY_UID {
	if x != nil {
		return x.CategoryUid
	}
	return enums.FILE_HOSTING_CATEGORY_UID(0)
}

func (x *FileHosting) GetMetadata() *objects.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FileHosting) GetObservables() []*objects.Observable {
	if x != nil {
		return x.Observables
	}
	return nil
}

func (x *FileHosting) GetUnmapped() *objects.Object {
	if x != nil {
		return x.Unmapped
	}
	return nil
}

func (x *FileHosting) GetCloud() *objects.Cloud {
	if x != nil {
		return x.Cloud
	}
	return nil
}

func (x *FileHosting) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *FileHosting) GetExpirationTime() int64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *FileHosting) GetTypeUid() enums.FILE_HOSTING_TYPE_UID {
	if x != nil {
		return x.TypeUid
	}
	return enums.FILE_HOSTING_TYPE_UID(0)
}

func (x *FileHosting) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *FileHosting) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

var File_ocsf_v1_2_0_events_application_application_proto protoreflect.FileDescriptor

var file_ocsf_v1_2_0_events_application_application_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x30, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x32, 0x5f,
	0x30, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x0a, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x58, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03,
	0x61, 0x70, 0x69, 0x12, 0x61, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x22, 0x94, 0x14, 0x0a, 0x11,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x65, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41,
	0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x46, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x61, 0x6c, 0x77, 0x61,
	0x72, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d,
	0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x12,
	0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x72, 0x63,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x09, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44,
	0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x3d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x5f, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64,
	0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41,
	0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x68, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6e, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x49, 0x53, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x59, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a,
	0x03, 0x61, 0x70, 0x69, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x65, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54,
	0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x07,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x73, 0x74,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49,
	0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x68, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x22, 0xcd, 0x0c, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c,
	0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55,
	0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x6b, 0x0a, 0x0c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f,
	0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x68, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c,
	0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x68, 0x0a,
	0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2e,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x30,
	0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x62, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x45, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5f, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x44, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xc4, 0x0d, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x43, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b,
	0x64, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69,
	0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x56, 0x0a, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x62, 0x0a, 0x0c, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49,
	0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x5f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50,
	0x49, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x59, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x59, 0x0a,
	0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x50, 0x49, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x08,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x88, 0x10, 0x0a, 0x0c, 0x53, 0x63,
	0x61, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70,
	0x69, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e,
	0x75, 0x6d, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x57, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79,
	0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x60, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x43, 0x41, 0x4e,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75,
	0x6d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x5a, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x04, 0x73, 0x63,
	0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x26,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6e,
	0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x63, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x60, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9c, 0x13, 0x0a, 0x19, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x2a, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x6c, 0x73, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x69,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x12,
	0x37, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x5e, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x66, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64,
	0x12, 0x6f, 0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x75,
	0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57,
	0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74, 0x6c, 0x73, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x6c, 0x73, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x54, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x20, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x77, 0x65,
	0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x72, 0x0a, 0x0c, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x4f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55,
	0x49, 0x44, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x39, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x0c, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xed, 0x17, 0x0a, 0x14, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x48, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e,
	0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x36,
	0x0a, 0x07, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x52, 0x07, 0x6d,
	0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72, 0x69,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x63, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x63, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57,
	0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x69,
	0x0a, 0x0b, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x48, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54,
	0x59, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44, 0x52, 0x0a, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x68, 0x74, 0x74,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f,
	0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x48,
	0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54,
	0x59, 0x5f, 0x44, 0x49, 0x53, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0c, 0x66,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x49, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41,
	0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x20, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f,
	0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0d, 0x77, 0x65, 0x62, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x0c, 0x77, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2a,
	0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x54, 0x6c, 0x73, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x25, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x12, 0x47, 0x0a, 0x0c, 0x64, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31,
	0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x73,
	0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x77, 0x65, 0x62,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76,
	0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x57, 0x65,
	0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x77, 0x65, 0x62, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x63, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x53, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x57, 0x45, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x49, 0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x07, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x73, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x63,
	0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4e, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x63, 0x73, 0x66,
	0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x48, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74, 0x6c, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x6c, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x54, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xe8, 0x0d, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x59, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x48, 0x4f, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x44, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c,
	0x64, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x73, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x72,
	0x69, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f,
	0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x48, 0x4f, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x5f, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x59, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x48, 0x4f, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55,
	0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x55, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x73,
	0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x5f, 0x0a, 0x0b, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3e, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x48, 0x4f, 0x53,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x44,
	0x52, 0x0a, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x62, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x49, 0x44, 0x52,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x6e,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x75, 0x6e, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x05,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x48, 0x4f, 0x53, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49,
	0x44, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x91,
	0x02, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x63, 0x73, 0x66, 0x2e, 0x76, 0x31, 0x5f, 0x32,
	0x5f, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x61, 0x6c, 0x6c, 0x6c, 0x61, 0x62, 0x68, 0x2f, 0x6f,
	0x63, 0x73, 0x66, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2f, 0x6f, 0x63, 0x73, 0x66, 0x2f, 0x76, 0x31, 0x5f, 0x32, 0x5f, 0x30, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0xa2, 0x02, 0x04, 0x4f, 0x56, 0x45, 0x41, 0xaa, 0x02, 0x1c, 0x4f, 0x63, 0x73, 0x66, 0x2e, 0x56,
	0x31, 0x32, 0x30, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02, 0x1c, 0x4f, 0x63, 0x73, 0x66, 0x5c, 0x56, 0x31,
	0x32, 0x30, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xe2, 0x02, 0x28, 0x4f, 0x63, 0x73, 0x66, 0x5c, 0x56, 0x31, 0x32,
	0x30, 0x5c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x1f, 0x4f, 0x63, 0x73, 0x66, 0x3a, 0x3a, 0x56, 0x31, 0x32, 0x30, 0x3a, 0x3a, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ocsf_v1_2_0_events_application_application_proto_rawDescOnce sync.Once
	file_ocsf_v1_2_0_events_application_application_proto_rawDescData = file_ocsf_v1_2_0_events_application_application_proto_rawDesc
)

func file_ocsf_v1_2_0_events_application_application_proto_rawDescGZIP() []byte {
	file_ocsf_v1_2_0_events_application_application_proto_rawDescOnce.Do(func() {
		file_ocsf_v1_2_0_events_application_application_proto_rawDescData = protoimpl.X.CompressGZIP(file_ocsf_v1_2_0_events_application_application_proto_rawDescData)
	})
	return file_ocsf_v1_2_0_events_application_application_proto_rawDescData
}

var file_ocsf_v1_2_0_events_application_application_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ocsf_v1_2_0_events_application_application_proto_goTypes = []interface{}{
	(*Application)(nil),                                  // 0: ocsf.v1_2_0.events.application.Application
	(*DatastoreActivity)(nil),                            // 1: ocsf.v1_2_0.events.application.DatastoreActivity
	(*ApplicationLifecycle)(nil),                         // 2: ocsf.v1_2_0.events.application.ApplicationLifecycle
	(*ApiActivity)(nil),                                  // 3: ocsf.v1_2_0.events.application.ApiActivity
	(*ScanActivity)(nil),                                 // 4: ocsf.v1_2_0.events.application.ScanActivity
	(*WebResourceAccessActivity)(nil),                    // 5: ocsf.v1_2_0.events.application.WebResourceAccessActivity
	(*WebResourcesActivity)(nil),                         // 6: ocsf.v1_2_0.events.application.WebResourcesActivity
	(*FileHosting)(nil),                                  // 7: ocsf.v1_2_0.events.application.FileHosting
	(*objects.Metadata)(nil),                             // 8: ocsf.v1_2_0.objects.Metadata
	(*objects.Cloud)(nil),                                // 9: ocsf.v1_2_0.objects.Cloud
	(*objects.Observable)(nil),                           // 10: ocsf.v1_2_0.objects.Observable
	(*objects.Enrichment)(nil),                           // 11: ocsf.v1_2_0.objects.Enrichment
	(enums.APPLICATION_TYPE_UID)(0),                      // 12: ocsf.v1_2_0.events.application.enums.APPLICATION_TYPE_UID
	(enums.APPLICATION_SEVERITY_ID)(0),                   // 13: ocsf.v1_2_0.events.application.enums.APPLICATION_SEVERITY_ID
	(enums.APPLICATION_STATUS_ID)(0),                     // 14: ocsf.v1_2_0.events.application.enums.APPLICATION_STATUS_ID
	(enums.APPLICATION_ACTIVITY_ID)(0),                   // 15: ocsf.v1_2_0.events.application.enums.APPLICATION_ACTIVITY_ID
	(enums.APPLICATION_CLASS_UID)(0),                     // 16: ocsf.v1_2_0.events.application.enums.APPLICATION_CLASS_UID
	(*objects.Api)(nil),                                  // 17: ocsf.v1_2_0.objects.Api
	(enums.APPLICATION_CATEGORY_UID)(0),                  // 18: ocsf.v1_2_0.events.application.enums.APPLICATION_CATEGORY_UID
	(*objects.Object)(nil),                               // 19: ocsf.v1_2_0.objects.Object
	(enums.DATASTORE_ACTIVITY_SEVERITY_ID)(0),            // 20: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_SEVERITY_ID
	(*objects.Table)(nil),                                // 21: ocsf.v1_2_0.objects.Table
	(*objects.FirewallRule)(nil),                         // 22: ocsf.v1_2_0.objects.FirewallRule
	(*objects.Malware)(nil),                              // 23: ocsf.v1_2_0.objects.Malware
	(*objects.NetworkEndpoint)(nil),                      // 24: ocsf.v1_2_0.objects.NetworkEndpoint
	(enums.DATASTORE_ACTIVITY_CLASS_UID)(0),              // 25: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_CLASS_UID
	(*objects.Actor)(nil),                                // 26: ocsf.v1_2_0.objects.Actor
	(*objects.Authorization)(nil),                        // 27: ocsf.v1_2_0.objects.Authorization
	(*objects.Databucket)(nil),                           // 28: ocsf.v1_2_0.objects.Databucket
	(*objects.QueryInfo)(nil),                            // 29: ocsf.v1_2_0.objects.QueryInfo
	(enums.DATASTORE_ACTIVITY_STATUS_ID)(0),              // 30: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_STATUS_ID
	(enums.DATASTORE_ACTIVITY_ACTION_ID)(0),              // 31: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_ACTION_ID
	(*objects.HttpRequest)(nil),                          // 32: ocsf.v1_2_0.objects.HttpRequest
	(enums.DATASTORE_ACTIVITY_DISPOSITION_ID)(0),         // 33: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_DISPOSITION_ID
	(enums.DATASTORE_ACTIVITY_TYPE_ID)(0),                // 34: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_TYPE_ID
	(enums.DATASTORE_ACTIVITY_ACTIVITY_ID)(0),            // 35: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_ACTIVITY_ID
	(*objects.Attack)(nil),                               // 36: ocsf.v1_2_0.objects.Attack
	(enums.DATASTORE_ACTIVITY_TYPE_UID)(0),               // 37: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_TYPE_UID
	(enums.DATASTORE_ACTIVITY_CATEGORY_UID)(0),           // 38: ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_CATEGORY_UID
	(*objects.Database)(nil),                             // 39: ocsf.v1_2_0.objects.Database
	(*objects.Device)(nil),                               // 40: ocsf.v1_2_0.objects.Device
	(enums.APPLICATION_LIFECYCLE_CLASS_UID)(0),           // 41: ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_CLASS_UID
	(enums.APPLICATION_LIFECYCLE_CATEGORY_UID)(0),        // 42: ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_CATEGORY_UID
	(enums.APPLICATION_LIFECYCLE_ACTIVITY_ID)(0),         // 43: ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_ACTIVITY_ID
	(enums.APPLICATION_LIFECYCLE_SEVERITY_ID)(0),         // 44: ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_SEVERITY_ID
	(*objects.Product)(nil),                              // 45: ocsf.v1_2_0.objects.Product
	(enums.APPLICATION_LIFECYCLE_STATUS_ID)(0),           // 46: ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_STATUS_ID
	(enums.APPLICATION_LIFECYCLE_TYPE_UID)(0),            // 47: ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_TYPE_UID
	(*objects.ResourceDetails)(nil),                      // 48: ocsf.v1_2_0.objects.ResourceDetails
	(enums.API_ACTIVITY_SEVERITY_ID)(0),                  // 49: ocsf.v1_2_0.events.application.enums.API_ACTIVITY_SEVERITY_ID
	(enums.API_ACTIVITY_TYPE_UID)(0),                     // 50: ocsf.v1_2_0.events.application.enums.API_ACTIVITY_TYPE_UID
	(enums.API_ACTIVITY_CATEGORY_UID)(0),                 // 51: ocsf.v1_2_0.events.application.enums.API_ACTIVITY_CATEGORY_UID
	(enums.API_ACTIVITY_ACTIVITY_ID)(0),                  // 52: ocsf.v1_2_0.events.application.enums.API_ACTIVITY_ACTIVITY_ID
	(enums.API_ACTIVITY_STATUS_ID)(0),                    // 53: ocsf.v1_2_0.events.application.enums.API_ACTIVITY_STATUS_ID
	(enums.API_ACTIVITY_CLASS_UID)(0),                    // 54: ocsf.v1_2_0.events.application.enums.API_ACTIVITY_CLASS_UID
	(*objects.Policy)(nil),                               // 55: ocsf.v1_2_0.objects.Policy
	(enums.SCAN_ACTIVITY_TYPE_UID)(0),                    // 56: ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_TYPE_UID
	(enums.SCAN_ACTIVITY_SEVERITY_ID)(0),                 // 57: ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_SEVERITY_ID
	(enums.SCAN_ACTIVITY_CLASS_UID)(0),                   // 58: ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_CLASS_UID
	(enums.SCAN_ACTIVITY_STATUS_ID)(0),                   // 59: ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_STATUS_ID
	(*objects.Scan)(nil),                                 // 60: ocsf.v1_2_0.objects.Scan
	(enums.SCAN_ACTIVITY_CATEGORY_UID)(0),                // 61: ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_CATEGORY_UID
	(enums.SCAN_ACTIVITY_ACTIVITY_ID)(0),                 // 62: ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_ACTIVITY_ID
	(*objects.Tls)(nil),                                  // 63: ocsf.v1_2_0.objects.Tls
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID)(0),    // 64: ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID
	(*objects.NetworkTraffic)(nil),                       // 65: ocsf.v1_2_0.objects.NetworkTraffic
	(*objects.NetworkProxy)(nil),                         // 66: ocsf.v1_2_0.objects.NetworkProxy
	(*objects.NetworkConnectionInfo)(nil),                // 67: ocsf.v1_2_0.objects.NetworkConnectionInfo
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID)(0),     // 68: ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID)(0),  // 69: ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID)(0),  // 70: ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID
	(*objects.HttpResponse)(nil),                         // 71: ocsf.v1_2_0.objects.HttpResponse
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID)(0),    // 72: ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID
	(*objects.WebResource)(nil),                          // 73: ocsf.v1_2_0.objects.WebResource
	(enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID)(0), // 74: ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID
	(enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID)(0),        // 75: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID
	(enums.WEB_RESOURCES_ACTIVITY_ACTION_ID)(0),          // 76: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTION_ID
	(enums.WEB_RESOURCES_ACTIVITY_CLASS_UID)(0),          // 77: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CLASS_UID
	(enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID)(0),        // 78: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID
	(enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID)(0),     // 79: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID
	(enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID)(0),       // 80: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID
	(enums.WEB_RESOURCES_ACTIVITY_STATUS_ID)(0),          // 81: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_STATUS_ID
	(enums.WEB_RESOURCES_ACTIVITY_TYPE_UID)(0),           // 82: ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_TYPE_UID
	(enums.FILE_HOSTING_STATUS_ID)(0),                    // 83: ocsf.v1_2_0.events.application.enums.FILE_HOSTING_STATUS_ID
	(enums.FILE_HOSTING_ACTIVITY_ID)(0),                  // 84: ocsf.v1_2_0.events.application.enums.FILE_HOSTING_ACTIVITY_ID
	(enums.FILE_HOSTING_CLASS_UID)(0),                    // 85: ocsf.v1_2_0.events.application.enums.FILE_HOSTING_CLASS_UID
	(*objects.File)(nil),                                 // 86: ocsf.v1_2_0.objects.File
	(enums.FILE_HOSTING_SEVERITY_ID)(0),                  // 87: ocsf.v1_2_0.events.application.enums.FILE_HOSTING_SEVERITY_ID
	(enums.FILE_HOSTING_CATEGORY_UID)(0),                 // 88: ocsf.v1_2_0.events.application.enums.FILE_HOSTING_CATEGORY_UID
	(enums.FILE_HOSTING_TYPE_UID)(0),                     // 89: ocsf.v1_2_0.events.application.enums.FILE_HOSTING_TYPE_UID
}
var file_ocsf_v1_2_0_events_application_application_proto_depIdxs = []int32{
	8,   // 0: ocsf.v1_2_0.events.application.Application.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	9,   // 1: ocsf.v1_2_0.events.application.Application.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	10,  // 2: ocsf.v1_2_0.events.application.Application.observables:type_name -> ocsf.v1_2_0.objects.Observable
	11,  // 3: ocsf.v1_2_0.events.application.Application.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	12,  // 4: ocsf.v1_2_0.events.application.Application.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_TYPE_UID
	13,  // 5: ocsf.v1_2_0.events.application.Application.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_SEVERITY_ID
	14,  // 6: ocsf.v1_2_0.events.application.Application.status_id:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_STATUS_ID
	15,  // 7: ocsf.v1_2_0.events.application.Application.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_ACTIVITY_ID
	16,  // 8: ocsf.v1_2_0.events.application.Application.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_CLASS_UID
	17,  // 9: ocsf.v1_2_0.events.application.Application.api:type_name -> ocsf.v1_2_0.objects.Api
	18,  // 10: ocsf.v1_2_0.events.application.Application.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_CATEGORY_UID
	19,  // 11: ocsf.v1_2_0.events.application.Application.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	20,  // 12: ocsf.v1_2_0.events.application.DatastoreActivity.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_SEVERITY_ID
	21,  // 13: ocsf.v1_2_0.events.application.DatastoreActivity.table:type_name -> ocsf.v1_2_0.objects.Table
	22,  // 14: ocsf.v1_2_0.events.application.DatastoreActivity.firewall_rule:type_name -> ocsf.v1_2_0.objects.FirewallRule
	23,  // 15: ocsf.v1_2_0.events.application.DatastoreActivity.malware:type_name -> ocsf.v1_2_0.objects.Malware
	24,  // 16: ocsf.v1_2_0.events.application.DatastoreActivity.src_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	25,  // 17: ocsf.v1_2_0.events.application.DatastoreActivity.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_CLASS_UID
	8,   // 18: ocsf.v1_2_0.events.application.DatastoreActivity.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	26,  // 19: ocsf.v1_2_0.events.application.DatastoreActivity.actor:type_name -> ocsf.v1_2_0.objects.Actor
	27,  // 20: ocsf.v1_2_0.events.application.DatastoreActivity.authorizations:type_name -> ocsf.v1_2_0.objects.Authorization
	28,  // 21: ocsf.v1_2_0.events.application.DatastoreActivity.databucket:type_name -> ocsf.v1_2_0.objects.Databucket
	29,  // 22: ocsf.v1_2_0.events.application.DatastoreActivity.query_info:type_name -> ocsf.v1_2_0.objects.QueryInfo
	19,  // 23: ocsf.v1_2_0.events.application.DatastoreActivity.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	30,  // 24: ocsf.v1_2_0.events.application.DatastoreActivity.status_id:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_STATUS_ID
	10,  // 25: ocsf.v1_2_0.events.application.DatastoreActivity.observables:type_name -> ocsf.v1_2_0.objects.Observable
	31,  // 26: ocsf.v1_2_0.events.application.DatastoreActivity.action_id:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_ACTION_ID
	32,  // 27: ocsf.v1_2_0.events.application.DatastoreActivity.http_request:type_name -> ocsf.v1_2_0.objects.HttpRequest
	33,  // 28: ocsf.v1_2_0.events.application.DatastoreActivity.disposition_id:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_DISPOSITION_ID
	34,  // 29: ocsf.v1_2_0.events.application.DatastoreActivity.type_id:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_TYPE_ID
	17,  // 30: ocsf.v1_2_0.events.application.DatastoreActivity.api:type_name -> ocsf.v1_2_0.objects.Api
	35,  // 31: ocsf.v1_2_0.events.application.DatastoreActivity.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_ACTIVITY_ID
	36,  // 32: ocsf.v1_2_0.events.application.DatastoreActivity.attacks:type_name -> ocsf.v1_2_0.objects.Attack
	24,  // 33: ocsf.v1_2_0.events.application.DatastoreActivity.dst_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	37,  // 34: ocsf.v1_2_0.events.application.DatastoreActivity.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_TYPE_UID
	38,  // 35: ocsf.v1_2_0.events.application.DatastoreActivity.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.DATASTORE_ACTIVITY_CATEGORY_UID
	39,  // 36: ocsf.v1_2_0.events.application.DatastoreActivity.database:type_name -> ocsf.v1_2_0.objects.Database
	11,  // 37: ocsf.v1_2_0.events.application.DatastoreActivity.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	9,   // 38: ocsf.v1_2_0.events.application.DatastoreActivity.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	40,  // 39: ocsf.v1_2_0.events.application.ApplicationLifecycle.device:type_name -> ocsf.v1_2_0.objects.Device
	41,  // 40: ocsf.v1_2_0.events.application.ApplicationLifecycle.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_CLASS_UID
	42,  // 41: ocsf.v1_2_0.events.application.ApplicationLifecycle.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_CATEGORY_UID
	43,  // 42: ocsf.v1_2_0.events.application.ApplicationLifecycle.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_ACTIVITY_ID
	11,  // 43: ocsf.v1_2_0.events.application.ApplicationLifecycle.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	17,  // 44: ocsf.v1_2_0.events.application.ApplicationLifecycle.api:type_name -> ocsf.v1_2_0.objects.Api
	44,  // 45: ocsf.v1_2_0.events.application.ApplicationLifecycle.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_SEVERITY_ID
	19,  // 46: ocsf.v1_2_0.events.application.ApplicationLifecycle.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	8,   // 47: ocsf.v1_2_0.events.application.ApplicationLifecycle.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	10,  // 48: ocsf.v1_2_0.events.application.ApplicationLifecycle.observables:type_name -> ocsf.v1_2_0.objects.Observable
	45,  // 49: ocsf.v1_2_0.events.application.ApplicationLifecycle.app:type_name -> ocsf.v1_2_0.objects.Product
	26,  // 50: ocsf.v1_2_0.events.application.ApplicationLifecycle.actor:type_name -> ocsf.v1_2_0.objects.Actor
	46,  // 51: ocsf.v1_2_0.events.application.ApplicationLifecycle.status_id:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_STATUS_ID
	47,  // 52: ocsf.v1_2_0.events.application.ApplicationLifecycle.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.APPLICATION_LIFECYCLE_TYPE_UID
	9,   // 53: ocsf.v1_2_0.events.application.ApplicationLifecycle.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	32,  // 54: ocsf.v1_2_0.events.application.ApiActivity.http_request:type_name -> ocsf.v1_2_0.objects.HttpRequest
	24,  // 55: ocsf.v1_2_0.events.application.ApiActivity.dst_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	19,  // 56: ocsf.v1_2_0.events.application.ApiActivity.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	10,  // 57: ocsf.v1_2_0.events.application.ApiActivity.observables:type_name -> ocsf.v1_2_0.objects.Observable
	11,  // 58: ocsf.v1_2_0.events.application.ApiActivity.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	17,  // 59: ocsf.v1_2_0.events.application.ApiActivity.api:type_name -> ocsf.v1_2_0.objects.Api
	26,  // 60: ocsf.v1_2_0.events.application.ApiActivity.actor:type_name -> ocsf.v1_2_0.objects.Actor
	48,  // 61: ocsf.v1_2_0.events.application.ApiActivity.resources:type_name -> ocsf.v1_2_0.objects.ResourceDetails
	49,  // 62: ocsf.v1_2_0.events.application.ApiActivity.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.API_ACTIVITY_SEVERITY_ID
	9,   // 63: ocsf.v1_2_0.events.application.ApiActivity.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	50,  // 64: ocsf.v1_2_0.events.application.ApiActivity.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.API_ACTIVITY_TYPE_UID
	51,  // 65: ocsf.v1_2_0.events.application.ApiActivity.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.API_ACTIVITY_CATEGORY_UID
	8,   // 66: ocsf.v1_2_0.events.application.ApiActivity.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	24,  // 67: ocsf.v1_2_0.events.application.ApiActivity.src_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	52,  // 68: ocsf.v1_2_0.events.application.ApiActivity.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.API_ACTIVITY_ACTIVITY_ID
	53,  // 69: ocsf.v1_2_0.events.application.ApiActivity.status_id:type_name -> ocsf.v1_2_0.events.application.enums.API_ACTIVITY_STATUS_ID
	54,  // 70: ocsf.v1_2_0.events.application.ApiActivity.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.API_ACTIVITY_CLASS_UID
	55,  // 71: ocsf.v1_2_0.events.application.ScanActivity.policy:type_name -> ocsf.v1_2_0.objects.Policy
	17,  // 72: ocsf.v1_2_0.events.application.ScanActivity.api:type_name -> ocsf.v1_2_0.objects.Api
	56,  // 73: ocsf.v1_2_0.events.application.ScanActivity.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_TYPE_UID
	57,  // 74: ocsf.v1_2_0.events.application.ScanActivity.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_SEVERITY_ID
	58,  // 75: ocsf.v1_2_0.events.application.ScanActivity.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_CLASS_UID
	19,  // 76: ocsf.v1_2_0.events.application.ScanActivity.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	26,  // 77: ocsf.v1_2_0.events.application.ScanActivity.actor:type_name -> ocsf.v1_2_0.objects.Actor
	9,   // 78: ocsf.v1_2_0.events.application.ScanActivity.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	59,  // 79: ocsf.v1_2_0.events.application.ScanActivity.status_id:type_name -> ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_STATUS_ID
	8,   // 80: ocsf.v1_2_0.events.application.ScanActivity.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	60,  // 81: ocsf.v1_2_0.events.application.ScanActivity.scan:type_name -> ocsf.v1_2_0.objects.Scan
	10,  // 82: ocsf.v1_2_0.events.application.ScanActivity.observables:type_name -> ocsf.v1_2_0.objects.Observable
	11,  // 83: ocsf.v1_2_0.events.application.ScanActivity.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	61,  // 84: ocsf.v1_2_0.events.application.ScanActivity.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_CATEGORY_UID
	62,  // 85: ocsf.v1_2_0.events.application.ScanActivity.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.SCAN_ACTIVITY_ACTIVITY_ID
	40,  // 86: ocsf.v1_2_0.events.application.ScanActivity.device:type_name -> ocsf.v1_2_0.objects.Device
	63,  // 87: ocsf.v1_2_0.events.application.WebResourceAccessActivity.tls:type_name -> ocsf.v1_2_0.objects.Tls
	64,  // 88: ocsf.v1_2_0.events.application.WebResourceAccessActivity.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CLASS_UID
	65,  // 89: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy_traffic:type_name -> ocsf.v1_2_0.objects.NetworkTraffic
	66,  // 90: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy:type_name -> ocsf.v1_2_0.objects.NetworkProxy
	67,  // 91: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy_connection_info:type_name -> ocsf.v1_2_0.objects.NetworkConnectionInfo
	68,  // 92: ocsf.v1_2_0.events.application.WebResourceAccessActivity.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_TYPE_UID
	69,  // 93: ocsf.v1_2_0.events.application.WebResourceAccessActivity.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_SEVERITY_ID
	11,  // 94: ocsf.v1_2_0.events.application.WebResourceAccessActivity.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	70,  // 95: ocsf.v1_2_0.events.application.WebResourceAccessActivity.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_ACTIVITY_ID
	19,  // 96: ocsf.v1_2_0.events.application.WebResourceAccessActivity.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	40,  // 97: ocsf.v1_2_0.events.application.WebResourceAccessActivity.device:type_name -> ocsf.v1_2_0.objects.Device
	24,  // 98: ocsf.v1_2_0.events.application.WebResourceAccessActivity.src_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	32,  // 99: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy_http_request:type_name -> ocsf.v1_2_0.objects.HttpRequest
	71,  // 100: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy_http_response:type_name -> ocsf.v1_2_0.objects.HttpResponse
	72,  // 101: ocsf.v1_2_0.events.application.WebResourceAccessActivity.status_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_STATUS_ID
	63,  // 102: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy_tls:type_name -> ocsf.v1_2_0.objects.Tls
	71,  // 103: ocsf.v1_2_0.events.application.WebResourceAccessActivity.http_response:type_name -> ocsf.v1_2_0.objects.HttpResponse
	66,  // 104: ocsf.v1_2_0.events.application.WebResourceAccessActivity.proxy_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkProxy
	10,  // 105: ocsf.v1_2_0.events.application.WebResourceAccessActivity.observables:type_name -> ocsf.v1_2_0.objects.Observable
	73,  // 106: ocsf.v1_2_0.events.application.WebResourceAccessActivity.web_resources:type_name -> ocsf.v1_2_0.objects.WebResource
	74,  // 107: ocsf.v1_2_0.events.application.WebResourceAccessActivity.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCE_ACCESS_ACTIVITY_CATEGORY_UID
	17,  // 108: ocsf.v1_2_0.events.application.WebResourceAccessActivity.api:type_name -> ocsf.v1_2_0.objects.Api
	8,   // 109: ocsf.v1_2_0.events.application.WebResourceAccessActivity.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	9,   // 110: ocsf.v1_2_0.events.application.WebResourceAccessActivity.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	26,  // 111: ocsf.v1_2_0.events.application.WebResourceAccessActivity.actor:type_name -> ocsf.v1_2_0.objects.Actor
	32,  // 112: ocsf.v1_2_0.events.application.WebResourceAccessActivity.http_request:type_name -> ocsf.v1_2_0.objects.HttpRequest
	75,  // 113: ocsf.v1_2_0.events.application.WebResourcesActivity.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTIVITY_ID
	8,   // 114: ocsf.v1_2_0.events.application.WebResourcesActivity.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	17,  // 115: ocsf.v1_2_0.events.application.WebResourcesActivity.api:type_name -> ocsf.v1_2_0.objects.Api
	23,  // 116: ocsf.v1_2_0.events.application.WebResourcesActivity.malware:type_name -> ocsf.v1_2_0.objects.Malware
	11,  // 117: ocsf.v1_2_0.events.application.WebResourcesActivity.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	71,  // 118: ocsf.v1_2_0.events.application.WebResourcesActivity.http_response:type_name -> ocsf.v1_2_0.objects.HttpResponse
	76,  // 119: ocsf.v1_2_0.events.application.WebResourcesActivity.action_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_ACTION_ID
	77,  // 120: ocsf.v1_2_0.events.application.WebResourcesActivity.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CLASS_UID
	78,  // 121: ocsf.v1_2_0.events.application.WebResourcesActivity.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_SEVERITY_ID
	9,   // 122: ocsf.v1_2_0.events.application.WebResourcesActivity.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	32,  // 123: ocsf.v1_2_0.events.application.WebResourcesActivity.http_request:type_name -> ocsf.v1_2_0.objects.HttpRequest
	71,  // 124: ocsf.v1_2_0.events.application.WebResourcesActivity.proxy_http_response:type_name -> ocsf.v1_2_0.objects.HttpResponse
	79,  // 125: ocsf.v1_2_0.events.application.WebResourcesActivity.disposition_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_DISPOSITION_ID
	24,  // 126: ocsf.v1_2_0.events.application.WebResourcesActivity.src_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	19,  // 127: ocsf.v1_2_0.events.application.WebResourcesActivity.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	22,  // 128: ocsf.v1_2_0.events.application.WebResourcesActivity.firewall_rule:type_name -> ocsf.v1_2_0.objects.FirewallRule
	80,  // 129: ocsf.v1_2_0.events.application.WebResourcesActivity.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_CATEGORY_UID
	10,  // 130: ocsf.v1_2_0.events.application.WebResourcesActivity.observables:type_name -> ocsf.v1_2_0.objects.Observable
	67,  // 131: ocsf.v1_2_0.events.application.WebResourcesActivity.proxy_connection_info:type_name -> ocsf.v1_2_0.objects.NetworkConnectionInfo
	73,  // 132: ocsf.v1_2_0.events.application.WebResourcesActivity.web_resources:type_name -> ocsf.v1_2_0.objects.WebResource
	63,  // 133: ocsf.v1_2_0.events.application.WebResourcesActivity.tls:type_name -> ocsf.v1_2_0.objects.Tls
	27,  // 134: ocsf.v1_2_0.events.application.WebResourcesActivity.authorizations:type_name -> ocsf.v1_2_0.objects.Authorization
	65,  // 135: ocsf.v1_2_0.events.application.WebResourcesActivity.proxy_traffic:type_name -> ocsf.v1_2_0.objects.NetworkTraffic
	24,  // 136: ocsf.v1_2_0.events.application.WebResourcesActivity.dst_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	73,  // 137: ocsf.v1_2_0.events.application.WebResourcesActivity.web_resources_result:type_name -> ocsf.v1_2_0.objects.WebResource
	40,  // 138: ocsf.v1_2_0.events.application.WebResourcesActivity.device:type_name -> ocsf.v1_2_0.objects.Device
	81,  // 139: ocsf.v1_2_0.events.application.WebResourcesActivity.status_id:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_STATUS_ID
	82,  // 140: ocsf.v1_2_0.events.application.WebResourcesActivity.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.WEB_RESOURCES_ACTIVITY_TYPE_UID
	36,  // 141: ocsf.v1_2_0.events.application.WebResourcesActivity.attacks:type_name -> ocsf.v1_2_0.objects.Attack
	26,  // 142: ocsf.v1_2_0.events.application.WebResourcesActivity.actor:type_name -> ocsf.v1_2_0.objects.Actor
	66,  // 143: ocsf.v1_2_0.events.application.WebResourcesActivity.proxy_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkProxy
	32,  // 144: ocsf.v1_2_0.events.application.WebResourcesActivity.proxy_http_request:type_name -> ocsf.v1_2_0.objects.HttpRequest
	63,  // 145: ocsf.v1_2_0.events.application.WebResourcesActivity.proxy_tls:type_name -> ocsf.v1_2_0.objects.Tls
	17,  // 146: ocsf.v1_2_0.events.application.FileHosting.api:type_name -> ocsf.v1_2_0.objects.Api
	83,  // 147: ocsf.v1_2_0.events.application.FileHosting.status_id:type_name -> ocsf.v1_2_0.events.application.enums.FILE_HOSTING_STATUS_ID
	24,  // 148: ocsf.v1_2_0.events.application.FileHosting.dst_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	11,  // 149: ocsf.v1_2_0.events.application.FileHosting.enrichments:type_name -> ocsf.v1_2_0.objects.Enrichment
	67,  // 150: ocsf.v1_2_0.events.application.FileHosting.connection_info:type_name -> ocsf.v1_2_0.objects.NetworkConnectionInfo
	84,  // 151: ocsf.v1_2_0.events.application.FileHosting.activity_id:type_name -> ocsf.v1_2_0.events.application.enums.FILE_HOSTING_ACTIVITY_ID
	24,  // 152: ocsf.v1_2_0.events.application.FileHosting.src_endpoint:type_name -> ocsf.v1_2_0.objects.NetworkEndpoint
	26,  // 153: ocsf.v1_2_0.events.application.FileHosting.actor:type_name -> ocsf.v1_2_0.objects.Actor
	85,  // 154: ocsf.v1_2_0.events.application.FileHosting.class_uid:type_name -> ocsf.v1_2_0.events.application.enums.FILE_HOSTING_CLASS_UID
	86,  // 155: ocsf.v1_2_0.events.application.FileHosting.file:type_name -> ocsf.v1_2_0.objects.File
	87,  // 156: ocsf.v1_2_0.events.application.FileHosting.severity_id:type_name -> ocsf.v1_2_0.events.application.enums.FILE_HOSTING_SEVERITY_ID
	88,  // 157: ocsf.v1_2_0.events.application.FileHosting.category_uid:type_name -> ocsf.v1_2_0.events.application.enums.FILE_HOSTING_CATEGORY_UID
	8,   // 158: ocsf.v1_2_0.events.application.FileHosting.metadata:type_name -> ocsf.v1_2_0.objects.Metadata
	10,  // 159: ocsf.v1_2_0.events.application.FileHosting.observables:type_name -> ocsf.v1_2_0.objects.Observable
	19,  // 160: ocsf.v1_2_0.events.application.FileHosting.unmapped:type_name -> ocsf.v1_2_0.objects.Object
	9,   // 161: ocsf.v1_2_0.events.application.FileHosting.cloud:type_name -> ocsf.v1_2_0.objects.Cloud
	89,  // 162: ocsf.v1_2_0.events.application.FileHosting.type_uid:type_name -> ocsf.v1_2_0.events.application.enums.FILE_HOSTING_TYPE_UID
	163, // [163:163] is the sub-list for method output_type
	163, // [163:163] is the sub-list for method input_type
	163, // [163:163] is the sub-list for extension type_name
	163, // [163:163] is the sub-list for extension extendee
	0,   // [0:163] is the sub-list for field type_name
}

func init() { file_ocsf_v1_2_0_events_application_application_proto_init() }
func file_ocsf_v1_2_0_events_application_application_proto_init() {
	if File_ocsf_v1_2_0_events_application_application_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatastoreActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationLifecycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebResourceAccessActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebResourcesActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ocsf_v1_2_0_events_application_application_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileHosting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ocsf_v1_2_0_events_application_application_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ocsf_v1_2_0_events_application_application_proto_goTypes,
		DependencyIndexes: file_ocsf_v1_2_0_events_application_application_proto_depIdxs,
		MessageInfos:      file_ocsf_v1_2_0_events_application_application_proto_msgTypes,
	}.Build()
	File_ocsf_v1_2_0_events_application_application_proto = out.File
	file_ocsf_v1_2_0_events_application_application_proto_rawDesc = nil
	file_ocsf_v1_2_0_events_application_application_proto_goTypes = nil
	file_ocsf_v1_2_0_events_application_application_proto_depIdxs = nil
}
